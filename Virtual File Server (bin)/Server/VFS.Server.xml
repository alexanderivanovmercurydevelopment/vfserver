<?xml version="1.0"?>
<doc>
    <assembly>
        <name>VFS.Server</name>
    </assembly>
    <members>
        <member name="T:VFS.Server.LockInfo">
            <summary>
            Информация о блокировке файла.
            </summary>
        </member>
        <member name="M:VFS.Server.LockInfo.#ctor(VFS.Server.VFSUser,VFS.Interfaces.VirtualDrive.IVirtualFile)">
            <summary>
            Создать информацию о блокировке файла.
            </summary>
            <param name="user">Пользователь, заблокировавший файл.</param>
            <param name="file">Блокируемый файл.</param>
        </member>
        <member name="P:VFS.Server.LockInfo.User">
            <summary>
            Пользователь, заблокировавший файл.
            </summary>
        </member>
        <member name="P:VFS.Server.LockInfo.File">
            <summary>
            Заблокированный файл.
            </summary>
        </member>
        <member name="T:VFS.Server.SyncronizedVirtualFileServer">
            <summary>
            Обертка виртуального файлового сервера, позволяющая 
            работать с ним сразу многим пользователям.
            </summary>
        </member>
        <member name="F:VFS.Server.SyncronizedVirtualFileServer.vfServer">
            <summary>
            Экземпляр виртуального файлового сервера.
            </summary>
        </member>
        <member name="F:VFS.Server.SyncronizedVirtualFileServer.maxParallelQueries">
            <summary>
            Максимальное количество одновременных запросов.
            </summary>
        </member>
        <member name="F:VFS.Server.SyncronizedVirtualFileServer.currentQueriesCount">
            <summary>
            Текущее количество выполняющихся запросов.
            </summary>
        </member>
        <member name="F:VFS.Server.SyncronizedVirtualFileServer.syncObject">
            <summary>
            Объект для синхронизации.
            </summary>
        </member>
        <member name="M:VFS.Server.SyncronizedVirtualFileServer.#ctor(VFS.Interfaces.IVirtualFileServer,System.Int32)">
            <summary>
            Создать обертку-"синхронизатор" виртуального файлового сервера.
            </summary>
            <param name="virtualFileServer">Виртуальный файловый сервер.</param>
            <param name="maxParallelQueries">Максимальное количество параллельных запросов.</param>
            <remarks>
            Если количество одновременно выполняющихся запросов достигнет
            <paramref name="maxParallelQueries"/>, последующие запросы не будут выполняться.
            </remarks>
        </member>
        <member name="M:VFS.Server.SyncronizedVirtualFileServer.ConnectUser(System.String)">
            <summary>
            Подключить нового пользователя.
            </summary>
            <param name="userName">Имя еще не подключенного пользователя.</param>
        </member>
        <member name="M:VFS.Server.SyncronizedVirtualFileServer.ChangeUsersCurrentDirectory(System.String,System.String)">
            <summary>
            Изменить текущую директорию пользователя.
            </summary>
            <param name="userName">Имя подключенного пользователя.</param>
            <param name="directoryPath">Путь к новой текущей директории.</param>
        </member>
        <member name="M:VFS.Server.SyncronizedVirtualFileServer.DisconnectUser(System.String)">
            <summary>
            Отключить пользователя.
            </summary>
            <param name="userName">Имя подключенного пользователя.</param>
        </member>
        <member name="M:VFS.Server.SyncronizedVirtualFileServer.GetUsersCount">
            <summary>
            Получить общее количество подключенных пользователей.
            </summary>
            <returns>Общее количество подключенных пользователей.</returns>
        </member>
        <member name="M:VFS.Server.SyncronizedVirtualFileServer.GetDriveStructure(System.String)">
            <summary>
            Получить информацию о структуре диска.
            </summary>
            <param name="driveName">Имя диска.</param>
            <returns>Информация о структуре диска.</returns>
        </member>
        <member name="M:VFS.Server.SyncronizedVirtualFileServer.CreateDirectory(System.String,System.String)">
            <summary>
            Создать папку.
            </summary>
            <param name="userName">Имя подключенного пользователя.</param>
            <param name="directoryPath">Путь и имя создаваемой директории.</param>
        </member>
        <member name="M:VFS.Server.SyncronizedVirtualFileServer.RemoveDirectory(System.String,System.String,System.Boolean)">
            <summary>
            Удалить папку.
            </summary>
            <param name="userName">Имя подключенного пользователя.</param>
            <param name="directoryPath">Путь к удаляемой папке.</param>
            <param name="recursive">Удалить, даже если есть подпапки.</param>
        </member>
        <member name="M:VFS.Server.SyncronizedVirtualFileServer.CreateFile(System.String,System.String)">
            <summary>
            Создать файл.
            </summary>
            <param name="userName">Имя подключенного пользователя.</param>
            <param name="filePath">Путь к файлу.</param>
        </member>
        <member name="M:VFS.Server.SyncronizedVirtualFileServer.RemoveFile(System.String,System.String)">
            <summary>
            Удалить файл.
            </summary>
            <param name="userName">Имя подключенного пользователя.</param>
            <param name="filePath">Путь к удаляемому файлу.</param>
        </member>
        <member name="M:VFS.Server.SyncronizedVirtualFileServer.LockFile(System.String,System.String)">
            <summary>
            Запретить удаление файла.
            </summary>
            <param name="userName">Имя подключенного пользователя.</param>
            <param name="filePath">Путь к удаляемому файлу.</param>
        </member>
        <member name="M:VFS.Server.SyncronizedVirtualFileServer.UnlockFile(System.String,System.String)">
            <summary>
            Снять запрет удаления файла.
            </summary>
            <param name="userName">Имя подключенного пользователя.</param>
            <param name="filePath">Путь к файлу.</param>
        </member>
        <member name="M:VFS.Server.SyncronizedVirtualFileServer.Copy(System.String,System.String,System.String)">
            <summary>
            Копировать папку или файл в целевую папку.
            </summary>
            <param name="userName">Имя подключенного пользователя.</param>
            <param name="sourcePath">Путь к копируемой папке или файлу.</param>
            <param name="destinationPath">Путь к целевой папке.</param>
        </member>
        <member name="M:VFS.Server.SyncronizedVirtualFileServer.Move(System.String,System.String,System.String)">
            <summary>
            Переместить папку или файл в другую папку.
            </summary>
            <param name="userName">Имя подключенного пользователя.</param>
            <param name="sourcePath">Путь к перемещаемой папке или файлу.</param>
            <param name="destinationPath">Путь к целевой папке.</param>
        </member>
        <member name="M:VFS.Server.SyncronizedVirtualFileServer.SyncPerformFunction``1(System.Func{``0})">
            <summary>
            Выполнить функцию синхронно (т.е. после завершения выполнения
            других операций и функций).
            </summary>
            <typeparam name="T">Тип результата функции.</typeparam>
            <param name="function">Функция.</param>
            <returns>Результат функции.</returns>
        </member>
        <member name="M:VFS.Server.SyncronizedVirtualFileServer.SyncPerformAction(System.Action)">
            <summary>
            Выполнить операцию синхронно, т.е. после завершения
            выполнения других операций и функций.
            </summary>
            <param name="action">Операция.</param>
        </member>
        <member name="M:VFS.Server.SyncronizedVirtualFileServer.ThrowIfOverload">
            <summary>
            Выдать исключение, если превышен предел одновременных
            запросов.
            </summary>
        </member>
        <member name="E:VFS.Server.SyncronizedVirtualFileServer.OperationPerformed">
            <summary>
            Событие завершения выполнения какой-либо операции.
            </summary>
        </member>
        <member name="T:VFS.Server.VFSConfig">
            <summary>
            Конфигурация виртуального файлового сервера.
            </summary>
        </member>
        <member name="M:VFS.Server.VFSConfig.#ctor(System.String)">
            <summary>
            Создать конфигурацию виртуального файлового сервера.
            </summary>
            <param name="defauldDirPath">Путь к папке, с которой
            начинают работу все только что подключенные пользователи.</param>
        </member>
        <member name="P:VFS.Server.VFSConfig.DefaultDirPath">
            <summary>
            Путь к директории, с которой начинают 
            работу все новые пользователи
            </summary>
        </member>
        <member name="T:VFS.Server.VFSConnectedUsers">
            <summary>
            Активные (подключенные) пользователи
            виртуального файлового сервера.
            </summary>
        </member>
        <member name="F:VFS.Server.VFSConnectedUsers.registeredUsers">
            <summary>
            Подключенные пользователи.
            </summary>
        </member>
        <member name="M:VFS.Server.VFSConnectedUsers.RegisterUser(System.String,System.String)">
            <summary>
            Подключить нового пользователя.
            </summary>
            <param name="name">Имя нового пользователя.</param>
            <param name="currentDirPath">Путь к текущей директории.</param>
        </member>
        <member name="M:VFS.Server.VFSConnectedUsers.UnregisterUser(System.String)">
            <summary>
            Отключить пользователя.
            </summary>
            <param name="name">Имя подключенного пользователя.</param>
        </member>
        <member name="M:VFS.Server.VFSConnectedUsers.ThrowIfUserIsNotConnected(System.String)">
            <summary>
            Удостовериться, что пользователь подключен.
            </summary>
            <param name="name">Имя пользователя.</param>
            <exception cref="T:System.InvalidOperationException">
            Пользователь с таким именем еще не подключен.
            </exception>
        </member>
        <member name="M:VFS.Server.VFSConnectedUsers.GetConnectedUser(System.String)">
            <summary>
            Получить подключенного пользователя по имени.
            </summary>
            <param name="userName">Имя подключенного пользователя.</param>
            <returns>Подключенный пользователь.</returns>
        </member>
        <member name="E:VFS.Server.VFSConnectedUsers.UserUnregistered">
            <summary>
            Событие отключения пользователя.
            </summary>
        </member>
        <member name="P:VFS.Server.VFSConnectedUsers.RegisteredUsers">
            <summary>
            Список подключенных пользователей.
            </summary>
        </member>
        <member name="T:VFS.Server.VFSUser">
            <summary>
            Пользователь виртуального файлового сервера.
            </summary>
        </member>
        <member name="F:VFS.Server.VFSUser.currentDirectoryPath">
            <summary>
            Путь к текущей папке пользователя.
            </summary>
        </member>
        <member name="M:VFS.Server.VFSUser.#ctor(System.String,System.String)">
            <summary>
            Создать нового пользователя виртуального 
            файлового сервера.
            </summary>
            <param name="name">Имя пользователя.</param>
            <param name="currentDirectoryPath">Путь к текущей рабочей
            папке пользователя.</param>
        </member>
        <member name="P:VFS.Server.VFSUser.Name">
            <summary>
            Имя пользователя.
            </summary>
        </member>
        <member name="P:VFS.Server.VFSUser.CurrentDirectoryPath">
            <summary>
            Путь к текущей папке пользователя.
            </summary>
        </member>
        <member name="T:VFS.Server.VFSLockingPolicy">
            <summary>
            Класс управления пользователями.
            </summary>
        </member>
        <member name="F:VFS.Server.VFSLockingPolicy.connectedUsers">
            <summary>
            Подключенные пользователи.
            </summary>
        </member>
        <member name="F:VFS.Server.VFSLockingPolicy.locks">
            <summary>
            Список заблокированных файлов.
            </summary>
        </member>
        <member name="M:VFS.Server.VFSLockingPolicy.#ctor(VFS.Server.VFSConnectedUsers)">
            <summary>
            Создать политику блокировки файлов.
            </summary>
            <param name="connectedUsers">Подключенные пользователи.</param>
        </member>
        <member name="M:VFS.Server.VFSLockingPolicy.ThrowIfCantRemove(System.String,VFS.Server.VirtualFileSystem)">
            <summary>
            Вызвать исключение, если нельзя удалить файл или папку.
            </summary>
            <param name="fullSource">Полный путь к файлу или папке.</param>
            <param name="virtualFileSystem">Виртуальная файловая система.</param>
        </member>
        <member name="M:VFS.Server.VFSLockingPolicy.ThrowIfCantRemoveDirectory(VFS.Interfaces.VirtualDrive.IVirtualDirectory)">
            <summary>
            Сгенерировать исключение, если пользователь не может
            удалить директорию.
            </summary>
            <param name="directory">Директория.</param>
        </member>
        <member name="M:VFS.Server.VFSLockingPolicy.ThrowIfCantRemoveFile(VFS.Interfaces.VirtualDrive.IVirtualFile)">
            <summary>
            Вызвать исключение, если пользователь не может удалить файл.
            </summary>
            <param name="file">Файл.</param>
        </member>
        <member name="M:VFS.Server.VFSLockingPolicy.LockFile(System.String,VFS.Interfaces.VirtualDrive.IVirtualFile)">
            <summary>
            Заблокировать файл для удаления.
            </summary>
            <param name="userName">Имя пользователя.</param>
            <param name="file">Файл.</param>
        </member>
        <member name="M:VFS.Server.VFSLockingPolicy.UnlockFile(System.String,VFS.Interfaces.VirtualDrive.IVirtualFile)">
            <summary>
            Разблокировать удаление файла.
            </summary>
            <param name="userName">Имя пользователя.</param>
            <param name="file">Файл.</param>
        </member>
        <member name="M:VFS.Server.VFSLockingPolicy.GetDirStructureWithLockingInfo(VFS.Interfaces.VirtualDrive.IVirtualDirectory)">
            <summary>
            Сформировать информацию о директории, включающую 
            информацию о блокировках.
            </summary>
            <param name="directory">Директория.</param>
            <returns>Информация о структуре директории.</returns>
        </member>
        <member name="M:VFS.Server.VFSLockingPolicy.IsFileLocked(VFS.Interfaces.VirtualDrive.IVirtualFile)">
            <summary>
            Признак того, что файл заблокирован для удаления.
            </summary>
            <param name="file">Файл.</param>
            <returns>True - файл заблокирован, false - нет.</returns>
        </member>
        <member name="M:VFS.Server.VFSLockingPolicy.AppendDirAndFileInfos(VFS.Interfaces.VirtualDrive.IVirtualDirectory,VFS.Interfaces.DriveStructureMessageFormat.IVFSDirectoryInfo)">
            <summary>
            Добавить информацию о директориях.
            </summary>
            <param name="from">Реальная директория.</param>
            <param name="to">Информация о директории.</param>
        </member>
        <member name="M:VFS.Server.VFSLockingPolicy.ConnectedUsersOnUserUnregistered(System.Object,VFS.Server.VFSUserEventArgs)">
            <summary>
            Обработка события отключения пользователя.
            </summary>
            <param name="sender">Источник события.</param>
            <param name="args">Аргументы события.</param>
        </member>
        <member name="T:VFS.Server.VFSUserEventArgs">
            <summary>
            Аргументы событий, связанных с пользователями
            виртуального файлового сервера.
            </summary>
        </member>
        <member name="M:VFS.Server.VFSUserEventArgs.#ctor(VFS.Server.VFSUser)">
            <summary>
            Создать аргументы события, связанного с пользователем
            виртуального файлового сервера.
            </summary>
            <param name="user">Пользователь.</param>
        </member>
        <member name="P:VFS.Server.VFSUserEventArgs.User">
            <summary>
            Пользователь виртуального файлового сервера.
            </summary>
        </member>
        <member name="T:VFS.Server.VirtualFileServer">
            <summary>
            Виртуальный файловый сервер.
            </summary>
        </member>
        <member name="F:VFS.Server.VirtualFileServer.fileSystem">
            <summary>
            Единая виртуальная файловая система.
            </summary>
        </member>
        <member name="F:VFS.Server.VirtualFileServer.connectedUsers">
            <summary>
            Подключенные пользователи.
            </summary>
        </member>
        <member name="F:VFS.Server.VirtualFileServer.lockingPolicy">
            <summary>
            Политика блокировки удаления файлов.
            </summary>
        </member>
        <member name="F:VFS.Server.VirtualFileServer.config">
            <summary>
            Конфигурация виртуального файлового сервера.
            </summary>
        </member>
        <member name="M:VFS.Server.VirtualFileServer.#ctor">
            <summary>
            Создать виртуальный файловый сервер.
            </summary>
        </member>
        <member name="M:VFS.Server.VirtualFileServer.ConnectUser(System.String)">
            <summary>
            Подключить нового пользователя.
            </summary>
            <param name="userName">Имя еще не подключенного пользователя.</param>
        </member>
        <member name="M:VFS.Server.VirtualFileServer.ChangeUsersCurrentDirectory(System.String,System.String)">
            <summary>
            Изменить текущую директорию пользователя.
            </summary>
            <param name="userName">Имя подключенного пользователя.</param>
            <param name="directoryPath">Путь к новой текущей директории.</param>
        </member>
        <member name="M:VFS.Server.VirtualFileServer.DisconnectUser(System.String)">
            <summary>
            Отключить пользователя.
            </summary>
            <param name="userName">Имя подключенного пользователя.</param>
        </member>
        <member name="M:VFS.Server.VirtualFileServer.GetUsersCount">
            <summary>
            Получить общее количество подключенных пользователей.
            </summary>
            <returns>Общее количество подключенных пользователей.</returns>
        </member>
        <member name="M:VFS.Server.VirtualFileServer.GetDriveStructure(System.String)">
            <summary>
            Получить информацию о структуре диска.
            </summary>
            <param name="driveName">Имя диска.</param>
            <returns>Информация о структуре диска.</returns>
        </member>
        <member name="M:VFS.Server.VirtualFileServer.CreateDirectory(System.String,System.String)">
            <summary>
            Создать папку.
            </summary>
            <param name="userName">Имя подключенного пользователя.</param>
            <param name="directoryPath">Путь и имя создаваемой директории.</param>
        </member>
        <member name="M:VFS.Server.VirtualFileServer.RemoveDirectory(System.String,System.String,System.Boolean)">
            <summary>
            Удалить папку.
            </summary>
            <param name="userName">Имя подключенного пользователя.</param>
            <param name="directoryPath">Путь к удаляемой папке.</param>
            <param name="recursive">Удалить, даже если есть подпапки.</param>
        </member>
        <member name="M:VFS.Server.VirtualFileServer.CreateFile(System.String,System.String)">
            <summary>
            Создать файл.
            </summary>
            <param name="userName">Имя подключенного пользователя.</param>
            <param name="filePath">Путь к файлу.</param>
        </member>
        <member name="M:VFS.Server.VirtualFileServer.RemoveFile(System.String,System.String)">
            <summary>
            Удалить файл.
            </summary>
            <param name="userName">Имя подключенного пользователя.</param>
            <param name="filePath">Путь к удаляемому файлу.</param>
        </member>
        <member name="M:VFS.Server.VirtualFileServer.LockFile(System.String,System.String)">
            <summary>
            Запретить удаление файла.
            </summary>
            <param name="userName">Имя подключенного пользователя.</param>
            <param name="filePath">Путь к удаляемому файлу.</param>
        </member>
        <member name="M:VFS.Server.VirtualFileServer.UnlockFile(System.String,System.String)">
            <summary>
            Снять запрет удаления файла.
            </summary>
            <param name="userName">Имя подключенного пользователя.</param>
            <param name="filePath">Путь к файлу.</param>
        </member>
        <member name="M:VFS.Server.VirtualFileServer.Copy(System.String,System.String,System.String)">
            <summary>
            Копировать папку или файл в целевую папку.
            </summary>
            <param name="userName">Имя подключенного пользователя.</param>
            <param name="sourcePath">Путь к копируемой папке или файлу.</param>
            <param name="destinationPath">Путь к целевой папке.</param>
        </member>
        <member name="M:VFS.Server.VirtualFileServer.Move(System.String,System.String,System.String)">
            <summary>
            Переместить папку или файл в другую папку.
            </summary>
            <param name="userName">Имя подключенного пользователя.</param>
            <param name="sourcePath">Путь к перемещаемой папке или файлу.</param>
            <param name="destinationPath">Путь к целевой папке.</param>
        </member>
        <member name="M:VFS.Server.VirtualFileServer.GetFullPath(System.String,System.String)">
            <summary>
            Получить полное имя файла или папки.
            </summary>
            <param name="userName">Имя пользователя.</param>
            <param name="path">Полный путь или путь относительно текущей
            рабочей директории пользователя.</param>
            <returns>Полный путь к файлу или папке.</returns>
        </member>
        <member name="M:VFS.Server.VirtualFileServer.ThrowIfTryRemoveCurrentDir(System.String,System.String)">
            <summary>
            Сгенерировать исключение, если пользователь
            пытается удалить свою текущую директорию, или директорию,
            родительскую по отношению к текущей.
            </summary>
            <param name="userName">Имя пользователя.</param>
            <param name="fullPath">Полный путь к директории, которую
            пользователь собирается удалить/переместить.</param>
        </member>
        <member name="M:VFS.Server.VirtualFileServer.RaiseOperationPerformedAsync(System.String,System.String)">
            <summary>
            Уведомить всех пользователей о завершении операции (асинхронно).
            </summary>
            <param name="notification">Краткое описание операции.</param>
            <param name="userName">Имя пользователя, выполнившего операцию.</param>
        </member>
        <member name="E:VFS.Server.VirtualFileServer.OperationPerformed">
            <summary>
            Событие завершения выполнения какой-либо операции.
            </summary>
        </member>
        <member name="T:VFS.Server.VirtualFileSystem">
            <summary>
            Единая виртуальная файловая система, работающая
            с разными реализациями виртуальных дисков.
            </summary>
        </member>
        <member name="F:VFS.Server.VirtualFileSystem.drives">
            <summary>
            Виртуальные диски.
            </summary>
        </member>
        <member name="M:VFS.Server.VirtualFileSystem.#ctor">
            <summary>
            Создать единую виртуальную файловую систему.
            </summary>
        </member>
        <member name="M:VFS.Server.VirtualFileSystem.CheckDirectoryExisting(System.String)">
            <summary>
            Проверить существование директории.
            </summary>
            <param name="fullPath">Полный путь к директории.</param>
        </member>
        <member name="M:VFS.Server.VirtualFileSystem.GetRootDirectory(System.String)">
            <summary>
            Получить информацию о структуре виртуального диска.
            </summary>
            <param name="driveName">Имя виртуального диска.</param>
            <returns>Информация о структуре виртуального диска.</returns>
        </member>
        <member name="M:VFS.Server.VirtualFileSystem.CreateDirectory(System.String)">
            <summary>
            Создать новую директорию.
            </summary>
            <param name="directoryFullPath">Полный путь.</param>
        </member>
        <member name="M:VFS.Server.VirtualFileSystem.RemoveDirectory(System.String,System.Boolean)">
            <summary>
            Удалить директорию.
            </summary>
            <param name="fullPath">Полный путь к директории.</param>
            <param name="recursive">Вместе с дочерними папками.</param>
        </member>
        <member name="M:VFS.Server.VirtualFileSystem.CreateFile(System.String)">
            <summary>
            Создать новый файл.
            </summary>
            <param name="fullFilePath">Полный путь к создаваемому файлу.</param>
        </member>
        <member name="M:VFS.Server.VirtualFileSystem.RemoveFile(System.String)">
            <summary>
            Удалить файл.
            </summary>
            <param name="fullFilePath">Полный путь к файлу.</param>
        </member>
        <member name="M:VFS.Server.VirtualFileSystem.GetExistingDirectory(System.String)">
            <summary>
            Найти существующую директорию.
            </summary>
            <param name="fullDirectoryPath">Полный путь к существующей директории.</param>
            <returns>Найденная директория.</returns>
            <exception cref="T:System.IO.DirectoryNotFoundException">
            Директория не существует.
            </exception>
        </member>
        <member name="M:VFS.Server.VirtualFileSystem.GetExistingFile(System.String)">
            <summary>
            Найти существующий файл.
            </summary>
            <param name="fullFilePath">Полный путь к существующему файлу.</param>
            <returns>Найденный файл.</returns>
            <exception cref="T:System.IO.FileNotFoundException">
            Файл не существует.
            </exception>
        </member>
        <member name="M:VFS.Server.VirtualFileSystem.Copy(System.String,System.String)">
            <summary>
            Копировать папку или файл в целевую папку.
            </summary>
            <param name="fullSource">Полный путь к папке или файлу.</param>
            <param name="fullDestination">Полный путь к целевой папке.</param>
        </member>
        <member name="M:VFS.Server.VirtualFileSystem.Move(System.String,System.String)">
            <summary>
            Переместить папку или файл в целевую папку.
            </summary>
            <param name="fullSource">Полный путь к папке или файлу.</param>
            <param name="fullDestination">Полный путь к целевой папке.</param>
        </member>
        <member name="M:VFS.Server.VirtualFileSystem.FindDirectory(System.String)">
            <summary>
            Найти директорию по полному пути.
            </summary>
            <param name="fullDirectoryPath">Путь к директории.</param>
            <returns>Найденная директория, или null.</returns>
        </member>
        <member name="M:VFS.Server.VirtualFileSystem.FindFile(System.String)">
            <summary>
            Найти файл по полному пути.
            </summary>
            <param name="fullFilePath">Полный путь к файлу.</param>
            <returns>Найденный файл, или null.</returns>
        </member>
        <member name="M:VFS.Server.VirtualFileSystem.AddInMemoryVirtualDrive(System.String)">
            <summary>
            Добавить виртуальный диск, хранящий данные в памяти.
            </summary>
            <param name="driveName">Имя диска.</param>
        </member>
        <member name="M:VFS.Server.VirtualFileSystem.GetExistingDrive(System.String)">
            <summary>
            Получить корневую папку существующего диска.
            </summary>
            <param name="driveName">Имя диска.</param>
            <returns>Корневая папка диска.</returns>
        </member>
        <member name="M:VFS.Server.VirtualFileSystem.ThrowIfContainsOnlyDriveName(System.String)">
            <summary>
            Сгенерировать исключение, если полный путь содержит только имя диска.
            </summary>
            <param name="fullPath">Полный путь.</param>
        </member>
    </members>
</doc>
